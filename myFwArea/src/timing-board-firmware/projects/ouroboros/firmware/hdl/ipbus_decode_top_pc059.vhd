-- Address decode logic for ipbus fabric
-- 
-- This file has been AUTOGENERATED from the address table - do not hand edit
-- 
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
-- 
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_top_pc059 is

  constant IPBUS_SEL_WIDTH: positive := 5; -- Should be enough for now?
  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_top_pc059(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically  generated VHDL the Fri Apr 13 11:35:29 2018 
  constant N_SLV_IO: integer := 0;
  constant N_SLV_MASTER: integer := 1;
  constant N_SLV_ENDPOINT0: integer := 2;
  constant N_SLV_ENDPOINT1: integer := 3;
  constant N_SLV_ENDPOINT2: integer := 4;
  constant N_SLV_ENDPOINT3: integer := 5;
  constant N_SLAVES: integer := 6;
-- END automatically generated VHDL

    
end ipbus_decode_top_pc059;

package body ipbus_decode_top_pc059 is

  function ipbus_sel_top_pc059(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically  generated VHDL the Fri Apr 13 11:35:29 2018 
    if    std_match(addr, "---------------------00-00------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_IO, IPBUS_SEL_WIDTH)); -- io / base 0x00000000 / mask 0x000006c0
    elsif std_match(addr, "---------------------01---------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_MASTER, IPBUS_SEL_WIDTH)); -- master / base 0x00000200 / mask 0x00000600
    elsif std_match(addr, "---------------------10-00------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ENDPOINT0, IPBUS_SEL_WIDTH)); -- endpoint0 / base 0x00000400 / mask 0x000006c0
    elsif std_match(addr, "---------------------10-01------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ENDPOINT1, IPBUS_SEL_WIDTH)); -- endpoint1 / base 0x00000440 / mask 0x000006c0
    elsif std_match(addr, "---------------------10-10------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ENDPOINT2, IPBUS_SEL_WIDTH)); -- endpoint2 / base 0x00000480 / mask 0x000006c0
    elsif std_match(addr, "---------------------10-11------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ENDPOINT3, IPBUS_SEL_WIDTH)); -- endpoint3 / base 0x000004c0 / mask 0x000006c0
-- END automatically generated VHDL

    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;

    return sel;

  end function ipbus_sel_top_pc059;

end ipbus_decode_top_pc059;

